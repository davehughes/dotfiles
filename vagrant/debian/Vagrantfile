# -*- mode: ruby -*-
# # vi: set ft=ruby :

require 'fileutils'

# Defaults for config options defined in CONFIG
# $num_instances = 3
$num_instances = 1
$enable_serial_logging = false
$vb_gui = false
$vb_memory = 2048
$vb_cpus = 1

Vagrant.configure("2") do |config|
  config.vm.box = "egaloutarian/ubuntu-trusty"
  config.vm.box_url = "https://vagrantcloud.com/egaloutarian/ubuntu-trusty"

  config.vm.provider :vmware_fusion do |vb, override|
    override.vm.box_url = "http://storage.core-os.net/coreos/amd64-usr/alpha/coreos_production_vagrant_vmware_fusion.box"
  end

  # Fix docker not being able to resolve private registry in VirtualBox
  config.vm.provider :virtualbox do |vb, override|
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
  end

  # plugin conflict
  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end

  (1..$num_instances).each do |i|
    config.vm.define vm_name = "ubuntu-%02d" % i do |config|
      config.vm.hostname = vm_name

      if $enable_serial_logging
        logdir = File.join(File.dirname(__FILE__), "log")
        FileUtils.mkdir_p(logdir)

        serialFile = File.join(logdir, "%s-serial.txt" % vm_name)
        FileUtils.touch(serialFile)

        config.vm.provider :vmware_fusion do |v, override|
          v.vmx["serial0.present"] = "TRUE"
          v.vmx["serial0.fileType"] = "file"
          v.vmx["serial0.fileName"] = serialFile
          v.vmx["serial0.tryNoRxLoss"] = "FALSE"
        end

        config.vm.provider :virtualbox do |vb, override|
          vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
          vb.customize ["modifyvm", :id, "--uartmode1", serialFile]
        end
      end

      config.vm.provider :virtualbox do |vb|
        vb.gui = $vb_gui
        vb.memory = $vb_memory
        vb.cpus = $vb_cpus
      end

      config.vm.provision "shell", path: "install-dotfiles.sh", privileged: false

      ip = "172.17.8.#{i+100}"
      config.vm.network :private_network, ip: ip
      config.vm.synced_folder "/Volumes/Share/projects", "/projects"
      # config.vm.synced_folder "~/.ssh", "/home/d/.ssh"

    end
  end
end
